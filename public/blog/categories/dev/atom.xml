<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: dev | Bird Stream]]></title>
  <link href="http://www.adambird.com/blog/categories/dev/atom.xml" rel="self"/>
  <link href="http://www.adambird.com/"/>
  <updated>2013-08-15T18:37:10+02:00</updated>
  <id>http://www.adambird.com/</id>
  <author>
    <name><![CDATA[Adam]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Pushing info to my Pebble watch]]></title>
    <link href="http://www.adambird.com/pushing-info-to-pebble-watch"/>
    <updated>2013-05-12T15:06:00+02:00</updated>
    <id>http://www.adambird.com/pushing-info-to-pebble-watch</id>
    <content type="html"><![CDATA[<p><a href="http://www.flickr.com/photos/adambird/8730919595/" title="Weather forecast to my Pebble by adamebird, on Flickr"><img src="http://farm8.staticflickr.com/7283/8730919595_b631670ee7.jpg" width="375" height="500" alt="Weather forecast to my Pebble"></a></p>

<p>My <a href="http://getpebble.com">Pebble Watch</a> finally arrived this week so I thought I should have a go at pushing information to it. As a cycle commuter I look at the weather every day and am primarily interested in wind direction and rain forecast so I though it would be neat to have this appear on my watch every morning.</p>

<!-- more -->


<p><a href="http://ifttt.com">IFTTT</a> was the obvious place to start, especially as weather notifications are standard recipes. SMS or Twitter would be good channels to start but neither would work for me.</p>

<p>SMS just didn't work, I'm in the UK on Orange. And Twitter wouldn't allow sending a DM to myself (though as you'll see from my solution I could have just done this).</p>

<p>I had heard reports of a Pebble push API but haven't been able to find any documentation so I resorted to handcrafting my own solution.</p>

<h2>Pebblebot</h2>

<p>I created a simple Ruby command line script to handle the weather initially <a href="https://github.com/adambird/pebblebot">adambird/pebblebot</a>.</p>

<p>I've resorted to twitter DMs from another 'bot' account I've created for the purpose. Not ideal as I end up with DMs on several devices which I don't want. Once the Pebble Push API is available then this should be an easy swap out.</p>

<p>I host this on a Heroku at zero cost by having an app with no dynos and just a free <a href="https://addons.heroku.com/scheduler">Heroku Scheduler</a> that runs the script every morning.</p>

<p>At the moment this will need to be manually changed to daylight saving so I might need to thing of something more powerful for scheduling.</p>

<p>Have various ideas for improving and extending this, including making something that anyone could use. If you're interested let me know what would be useful to you <a href="http://twitter.com/adambird">@adambird</a>.</p>

<h2>Update</h2>

<p>I've now added support for <a href="http://pushover.net">Pushover</a> and extended the command line options. See the <a href="https://github.com/adambird/pebblebot">adambird/pebblebot</a> for full details</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Code Club, a call to arms]]></title>
    <link href="http://www.adambird.com/code-club-a-call-to-arms"/>
    <updated>2012-09-03T00:00:00+02:00</updated>
    <id>http://www.adambird.com/code-club-a-call-to-arms</id>
    <content type="html"><![CDATA[<p><img src="http://www.adambird.com/images/code-club-logo.png" alt="" width="180px"/></p>

<p>Are you a developer? Are you a business owner who employs developers? Have you heard about<a href="http://codeclub.org.uk"> CodeClub</a>?&nbsp;</p>

<p>Code Club is a nationwide network of volunteer-led after school coding clubs for children aged 9-11. The mission is&nbsp;to give every child in the UK the chance to learn to code. The&nbsp;aim to have a Code Club in 25% of primary schools in the UK by the end of 2014.</p>

<p>What's not to like about being part of that.</p>

<!-- more -->


<p>A new term is about to start so I urge you to contact your local primary school, either local to home or work, and volunteer to run a club for a term. All the materials are made available by Code Club so it's super easy.</p>

<p>If you're a developer you just have to inspire hungry young minds.</p>

<p>If you employ developers then this a perfect personal development opportunity for your team and a real opportunity for you to give something to your community.</p>

<p>If you're in Nottingham then get in touch with me (<a href="mailto:adam.bird@esendex.com">adam.bird@esendex.com</a>) as the City Council are very, very keen to find ways they can help local employers to make this happen.</p>

<p>So, to summarise</p>

<ul>
<li>Go here&nbsp;<a href="http://codeclub.org.uk/">http://codeclub.org.uk/</a></li>
<li>Volunteer</li>
<li>Inspire the next generation</li>
</ul>


<p>&nbsp;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Delayed_job Syck woes when deploying to Heroku Cedar]]></title>
    <link href="http://www.adambird.com/delayedjob-syck-woes-when-deploying-to-heroku"/>
    <updated>2012-06-26T00:00:00+02:00</updated>
    <id>http://www.adambird.com/delayedjob-syck-woes-when-deploying-to-heroku</id>
    <content type="html"><![CDATA[<p>This caused me a bit of heartache and I found little to help via the usual channels.</p>

<p>I'd upgraded a Rails 2 app that used Delayed_Job to Rails 3 and was deploying the Heroku Cedar stack. Jobs were being queued but would fail immediately when trying to deserialise with</p>

<pre><code>uninitialized constant Syck::Syck
</code></pre>

<!-- more -->


<p>when trying to parse and initialise the handler. Irritatingly the worker logs were showing the jobs as successful.</p>

<p>After messing around with trying to explicitly set the YAML parser in <code>config/boot.rb</code> I found the solution.</p>

<p><code>Syck</code> isn't available on the Heroku Cedar stack so you have to include the <code>Psych</code> gem.</p>

<pre><code>gem 'pysch'
</code></pre>

<p>I then ran this on the console to resubmit the jobs and all was good</p>

<pre><code>Delayed::Job.all.each do |job| job.invoke_job ; job.destroy end
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Remain friends with your Git collaborators by auto removing whitespace in Textmate]]></title>
    <link href="http://www.adambird.com/remain-friends-with-your-git-collaborators-by"/>
    <updated>2012-05-18T00:00:00+02:00</updated>
    <id>http://www.adambird.com/remain-friends-with-your-git-collaborators-by</id>
    <content type="html"><![CDATA[<p>Handy article that shows you how to do just that</p>

<p><a href="http://blogobaggins.com/2009/03/31/waging-war-on-whitespace.html">http://blogobaggins.com/2009/03/31/waging-war-on-whitespace.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Decoupling the domain from the interface with ReST and method objects]]></title>
    <link href="http://www.adambird.com/decoupling-the-domain-from-the-interface-with"/>
    <updated>2012-05-08T00:00:00+02:00</updated>
    <id>http://www.adambird.com/decoupling-the-domain-from-the-interface-with</id>
    <content type="html"><![CDATA[<p>MVC (model-view-controller) is a well established pattern for developing web applications which I've used with both Rails and ASP.NET. Both of these frameworks provide powerful interface add-ons, for example validations, with which you can decorate your models and let the framework do a lot of heavy lifting for you.</p>

<p>However, I've found that using these can lead to a leaky coupling between domain and UI logic which slowly and inexorably adds complexity and maintainability headaches.</p>

<p>I've started using a new approach that I'm finding more flexible but has enough pragmatism to leverage the framework hooks and features.</p>

<!-- more -->


<h3>Treat the web app as an API</h3>

<p>Whatever you do, make the web application url scheme work with resources. For example if you need to expose a password reset feature you would do the following</p>

<pre><code>POST /password_resets
</code></pre>

<p>You would then provide a link to the created password reset request in an email</p>

<pre><code>GET /password_resets/wieurh2398hf38h83h028f2=f92-0fw0f
</code></pre>

<p>The the user would then submit a new password with</p>

<pre><code>PUT /password_resets/wieurh2398hf38h83h028f2=f92-0fw0f
</code></pre>

<p>All good so far. But here's the next stage</p>

<h3>Resources are not necessarily domain objects</h3>

<p>When I create a password reset request I'm not actually creating a record in a database somewhere, I'm actually performing an operation on a User domain object to append a random token that I can use to look up the user record when the user clicks on the link.</p>

<pre><code>class User
  def create_password_reset_token(at)
    password_reset_token = SecureRandom.urlsafe_base64
    password_reset_token_expires_at = at.utc + (60*60*24)
  end
end
</code></pre>

<p>Enter the method object. For this interaction I need two. CreatePasswordReset and ResetPassword.</p>

<pre><code>class CreatePasswordReset
  attr_accessor :user_id

  def execute(at)
    user = user_store.get(user_id)
    user.create_password_reset(at)
    user_store.save(user)
  end
end

class ResetPassword
  include ActiveModel::Validations
  attr_accessor :token, :password, :password_confirmation

  validate :password, :presence =&amp;gt; true   
  validate :password, :confirmation =&amp;gt; true    

  def execute(at)
    if valid?       
      user = user_store.get_by_token(token)       
      user.set_password(password)       
      user_store.save(user)     
    end   
  end 
end
</code></pre>

<p>The corresponding controller methods are super simple as they just treat the result of the execute method as a binary result.</p>

<pre><code>class PasswordResetController &amp;lt; ApplicationController   
  def update     
    command = ResetPassword.new(params[:reset_password])     
    if command.execute(current_time)       
      redirect_to account_path, :notice =&amp;gt; &amp;quot;We've updated your password&amp;quot;     
    else       
      render :edit     
    end   
  end
end
</code></pre>

<p>The result is</p>

<ul>
<li>I have a web api that maps to operations that a user wants to perform and domain that maps to the entities in my business system.</li>
<li>I have very simple controllers that delegate the domain interactions to method objects that understand the required interactions.</li>
<li>I leverage the validation helpers provided by the framework without polluting my domain with UI detail</li>
</ul>


<p>I do appreciate that validation logic is actually domain logic but this pattern allows a pragmatic allocation of responsibilities in order to increase productivity.</p>

<h3>Roles and responsibilities</h3>

<p><strong>Controllers</strong> to ensure only authorised users can perform operations on the domain</p>

<p><strong>Method Objects</strong> to ensure domain interactions are valid and well formed.</p>

<p><strong>Models</strong> to model the domain irrespective of how it's being interacted with.</p>

<p>What do you think?</p>
]]></content>
  </entry>
  
</feed>
